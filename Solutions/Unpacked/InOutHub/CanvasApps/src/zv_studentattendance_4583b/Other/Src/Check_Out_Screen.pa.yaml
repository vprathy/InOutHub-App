# ************************************************************************************************
# Warning: YAML source code for Canvas Apps should only be used to review changes made within Power Apps Studio and for minor edits (Preview).
# Use the maker portal to create and edit your Power Apps.
# 
# The schema file for Canvas Apps is available at https://go.microsoft.com/fwlink/?linkid=2304907
# 
# For more information, visit https://go.microsoft.com/fwlink/?linkid=2292623
# ************************************************************************************************
Screens:
  Check_Out_Screen:
    Properties:
      LoadingSpinnerColor: =RGBA(56, 96, 178, 1)
    Children:
      - MomPickup:
          Control: Classic/Button@2.2.0
          Properties:
            BorderColor: =ColorFade(Self.Fill, -15%)
            Color: =RGBA(255, 255, 255, 1)
            DisabledBorderColor: =RGBA(166, 166, 166, 1)
            DisplayMode: |-
              =If(
                  IsBlankOrError(
                      LookUp(
                          Student_Infos_Cache,
                          IDName = CheckOutStudent.Text,
                          MotherName
                      )
                  ),
                  DisplayMode.Disabled,
                  DisplayMode.Edit
              )
            Fill: =RGBA(56, 96, 178, 1)
            Font: =Font.'Open Sans'
            Height: =253
            HoverBorderColor: =ColorFade(Self.BorderColor, 20%)
            HoverColor: =RGBA(255, 255, 255, 1)
            HoverFill: =ColorFade(RGBA(56, 96, 178, 1), -20%)
            OnSelect: "=If(\n    IsError(\n       // Patch(\n       //     ScanReports,\n       //     LookUp(\n       //         ScanReports,\n       //         ScanReportDate = SessionDate && DayScanID = CheckOutStudent.Text\n       //     ),\n       //     {CheckOutTag: true}\n       // );\n        Patch(\n            Student_Scans,\n            Defaults(Student_Scans),\n            {\n                Student_QR: CheckOutStudent.Text,\n                PickUpPerson: \"Mom: \" & First(Student_Info_LookUp).MotherName,\n                ScanType: \"Check Out\",\n                SS_Class: First(Student_Info_LookUp).Class\n            }\n        );\n    ),\n    Notify(\n        \"Update Failed, Please Try Again\",\n        NotificationType.Error\n    ),\n    Notify(\n        \" Check Out Recorded Successfully\",\n        NotificationType.Success\n    );\n    Clear(Check_Out_ScanData);\n    Clear(Student_Info_LookUp);\n    MomPickup.Visible = false;\n    DadPickUp.Visible = false;\n    Guardian1Pickup.Visible = false;\n    Guardian2Pickup.Visible = false;\n    Set(\n        Student,\n        Blank()\n    );\n    \n)"
            PressedBorderColor: =Self.Fill
            PressedColor: =Self.Fill
            PressedFill: =Self.Color
            Size: =20
            Text: |-
              ="Mom

              " & First(Student_Info_LookUp).MotherName
            VerticalAlign: =VerticalAlign.Top
            Visible: =If(CheckOutStudent.Text = "Invalid QR Code, Try Again", false, true)
            Width: =252
            X: =40
            Y: =368
      - DadPickUp:
          Control: Classic/Button@2.2.0
          Properties:
            BorderColor: =ColorFade(Self.Fill, -15%)
            Color: =RGBA(255, 255, 255, 1)
            DisabledBorderColor: =RGBA(166, 166, 166, 1)
            DisplayMode: |-
              =If(
                  IsBlankOrError(
                      LookUp(
                          Student_Infos_Cache,
                          IDName = CheckOutStudent.Text,
                          Father
                      )
                  ),
                  DisplayMode.Disabled,
                  DisplayMode.Edit
              )
            Fill: =RGBA(56, 96, 178, 1)
            Font: =Font.'Open Sans'
            Height: =253
            HoverBorderColor: =ColorFade(Self.BorderColor, 20%)
            HoverColor: =RGBA(255, 255, 255, 1)
            HoverFill: =ColorFade(RGBA(56, 96, 178, 1), -20%)
            OnSelect: "=If(\n    IsError(\n        //Patch(\n        //    ScanReports,\n        //    LookUp(\n        //        ScanReports,\n        //        ScanReportDate = SessionDate && DayScanID = CheckOutStudent.Text\n        //    ),\n        //    {CheckOutTag: true}\n        //);\n        Patch(\n            Student_Scans,\n            Defaults(Student_Scans),\n            {\n                Student_QR: CheckOutStudent.Text,\n                PickUpPerson: \"Dad: \" & First(Student_Info_LookUp).Father,\n                ScanType: \"Check Out\",\n                SS_Class: First(Student_Info_LookUp).Class\n            }\n        );\n    ),\n    Notify(\n        \"Update Failed, Please Try Again\",\n        NotificationType.Error\n    ),\n    Notify(\n        \" Check Out Recorded Successfully\",\n        NotificationType.Success\n    );\n    Clear(Check_Out_ScanData);\n    Clear(Student_Info_LookUp);\n    MomPickup.Visible = false;\n    DadPickUp.Visible = false;\n    Guardian1Pickup.Visible = false;\n    Guardian2Pickup.Visible = false;\n    Set(\n        Student,\n        Blank()\n    );\n    \n)"
            PressedBorderColor: =Self.Fill
            PressedColor: =Self.Fill
            PressedFill: =Self.Color
            Size: =20
            Text: |-
              ="Dad

              " & First(Student_Info_LookUp).Father
            VerticalAlign: =VerticalAlign.Top
            Visible: =If(CheckOutStudent.Text = "Invalid QR Code, Try Again", false, true)
            Width: =252
            X: =348
            Y: =368
      - Guardian1Pickup:
          Control: Classic/Button@2.2.0
          Properties:
            BorderColor: =ColorFade(Self.Fill, -15%)
            Color: =RGBA(255, 255, 255, 1)
            DisabledBorderColor: =RGBA(166, 166, 166, 1)
            DisplayMode: |-
              =If(
                  IsBlankOrError(
                      LookUp(
                          Student_Infos_Cache,
                          IDName = CheckOutStudent.Text,
                          Guardian1
                      )
                  ),
                  DisplayMode.Disabled,
                  DisplayMode.Edit
              )
            Fill: =RGBA(56, 96, 178, 1)
            Font: =Font.'Open Sans'
            Height: =264
            HoverBorderColor: =ColorFade(Self.BorderColor, 20%)
            HoverColor: =RGBA(255, 255, 255, 1)
            HoverFill: =ColorFade(RGBA(56, 96, 178, 1), -20%)
            OnSelect: "=If(\n    IsError(\n        //Patch(\n        //    ScanReports,\n        //    LookUp(\n        //        ScanReports,\n        //        ScanReportDate = SessionDate && DayScanID = CheckOutStudent.Text\n        //    ),\n        //    {CheckOutTag: true}\n        //);\n        Patch(\n            Student_Scans,\n            Defaults(Student_Scans),\n            {\n                Student_QR: CheckOutStudent.Text,\n                PickUpPerson: \"Guardian1: \" & First(Student_Info_LookUp).Guardian1,\n                ScanType: \"Check Out\",\n                SS_Class: First(Student_Info_LookUp).Class\n            }\n        );\n    ),\n    Notify(\n        \"Update Failed, Please Try Again\",\n        NotificationType.Error\n    ),\n    Notify(\n        \" Check Out Recorded Successfully\",\n        NotificationType.Success\n    );\n    Clear(Check_Out_ScanData);\n    Clear(Student_Info_LookUp);\n    MomPickup.Visible = false;\n    DadPickUp.Visible = false;\n    Guardian1Pickup.Visible = false;\n    Guardian2Pickup.Visible = false;\n    Set(\n        Student,\n        Blank()\n    );\n    \n)"
            PressedBorderColor: =Self.Fill
            PressedColor: =Self.Fill
            PressedFill: =Self.Color
            Size: =20
            Text: |-
              ="Guardian 1

              " & First(Student_Info_LookUp).Guardian1
            VerticalAlign: =VerticalAlign.Top
            Visible: =If(CheckOutStudent.Text = "Invalid QR Code, Try Again", false, true)
            Width: =252
            X: =40
            Y: =685
      - Guardian2Pickup:
          Control: Classic/Button@2.2.0
          Properties:
            BorderColor: =ColorFade(Self.Fill, -15%)
            Color: =RGBA(255, 255, 255, 1)
            DisabledBorderColor: =RGBA(166, 166, 166, 1)
            DisplayMode: |-
              =If(
                  IsBlankOrError(
                      LookUp(
                          Student_Infos_Cache,
                          IDName = CheckOutStudent.Text,
                          Guardian2
                      )
                  ),
                  DisplayMode.Disabled,
                  DisplayMode.Edit
              )
            Fill: =RGBA(56, 96, 178, 1)
            Font: =Font.'Open Sans'
            Height: =264
            HoverBorderColor: =ColorFade(Self.BorderColor, 20%)
            HoverColor: =RGBA(255, 255, 255, 1)
            HoverFill: =ColorFade(RGBA(56, 96, 178, 1), -20%)
            OnSelect: "=If(\n    IsError(\n        //Patch(\n        //    ScanReports,\n        //    LookUp(\n        //        ScanReports,\n        //        ScanReportDate = SessionDate && DayScanID = CheckOutStudent.Text\n        //    ),\n        //    {CheckOutTag: true}\n        //);\n        Patch(\n            Student_Scans,\n            Defaults(Student_Scans),\n            {\n                Student_QR: CheckOutStudent.Text,\n                PickUpPerson: \"Guardian2: \" & First(Student_Info_LookUp).Guardian2,\n                ScanType: \"Check Out\",\n                SS_Class: First(Student_Info_LookUp).Class\n            }\n        );\n    ),\n    Notify(\n        \"Update Failed, Please Try Again\",\n        NotificationType.Error\n    ),\n    Notify(\n        \" Check Out Recorded Successfully\",\n        NotificationType.Success\n    );\n    Clear(Check_Out_ScanData);\n    Clear(Student_Info_LookUp);\n    MomPickup.Visible = false;\n    DadPickUp.Visible = false;\n    Guardian1Pickup.Visible = false;\n    Guardian2Pickup.Visible = false;\n    Set(\n        Student,\n        Blank()\n    );\n    \n)"
            PressedBorderColor: =Self.Fill
            PressedColor: =Self.Fill
            PressedFill: =Self.Color
            Size: =20
            Text: |-
              ="Guardian 2

              " & First(Student_Info_LookUp).Guardian2
            VerticalAlign: =VerticalAlign.Top
            Visible: =If(CheckOutStudent.Text = "Invalid QR Code, Try Again", false, true)
            Width: =252
            X: =348
            Y: =685
      - Back_Icon_3:
          Control: Classic/Icon@2.5.0
          Properties:
            BorderColor: =RGBA(0, 18, 107, 1)
            Color: =RGBA(0, 18, 107, 1)
            Height: =46
            Icon: =Icon.BackArrow
            OnSelect: =Navigate(Home_Screen)
            Width: =46
            X: =49
            Y: =49
      - Check_Out_BarcodeReader_1:
          Control: BarcodeReader@1.0.25
          Properties:
            FontSize: =24
            OnScan: |
              =ClearCollect(
                  Check_Out_ScanData,
                  Check_Out_BarcodeReader_1.Barcodes
              );
              ClearCollect(
                  Student_Info_LookUp,
                  Filter(
                      Student_Infos_Cache,
                      IDName = First(Check_Out_ScanData).Value
                  )
              );
              //Notify(CountRows(Student_Info_LookUp));
              If(
                  IsBlankOrError(First(Student_Info_LookUp).IDName),
                  Set(Student, "Invalid QR Code, Try Again"),
                  Set(Student, First(Student_Info_LookUp).IDName)
              );
            ScanningMode: ='BarcodeReader.ScanningMode'.SelectToScan
            Text: ="Scan Student ID"
            Width: =460
            X: =90
            Y: =156
      - Check_Out_Screen_Header_1:
          Control: Label@2.5.1
          Properties:
            Align: =Align.Center
            BorderColor: =RGBA(0, 18, 107, 1)
            Font: =Font.'Open Sans'
            FontWeight: =FontWeight.Semibold
            Height: =46
            Size: =30
            Text: ="Student Check Out"
            Width: =398
            X: =117
            Y: =49
      - CheckOutStudent:
          Control: Label@2.5.1
          Properties:
            BorderColor: =RGBA(39, 113, 194, 1)
            BorderStyle: =
            DisplayMode: =DisplayMode.View
            Font: =Font.'Open Sans'
            FontWeight: =FontWeight.Semibold
            Overflow: =Overflow.Scroll
            Size: =20
            Text: =Student
            Visible: =If(CountRows(Check_Out_ScanData)>0, true, false)
            Width: =464
            X: =140
            Y: =262
      - IDNameLabel_1:
          Control: Label@2.5.1
          Properties:
            BorderColor: =
            BorderStyle: =
            DisplayMode: =DisplayMode.View
            Fill: =RGBA(255, 255, 255, 1)
            Font: =Font.'Open Sans'
            FontWeight: =FontWeight.Semibold
            Size: =16
            Text: |-
              ="ID & Name: "
            VerticalAlign: =VerticalAlign.Top
            Visible: =If(CountRows(Check_Out_ScanData)>0, true, false)
            Width: =100
            X: =40
            Y: =262
      - Camera_Icon_1:
          Control: Classic/Icon@2.5.0
          Properties:
            BorderColor: =RGBA(0, 18, 107, 1)
            Color: =RGBA(255, 255, 255, 1)
            DisplayMode: =DisplayMode.View
            Fill: =RGBA(56, 96, 178, 1)
            Height: =47
            Icon: =Icon.Camera
            Width: =74
            X: =108
            Y: =168
